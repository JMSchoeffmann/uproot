language: python

cache: pip

os:
  - linux

env:
  - CONDA_PYTHON_VERION=2.7 NUMPY="numpy==1.13.1"
  - CONDA_PYTHON_VERION=2.7 NUMPY="numpy==1.14.5"
  - CONDA_PYTHON_VERION=2.7 NUMPY="numpy>=1.15"

  - CONDA_PYTHON_VERION=3.4 NUMPY="numpy==1.13.1"
  - CONDA_PYTHON_VERION=3.4 NUMPY="numpy==1.14.5"
  - CONDA_PYTHON_VERION=3.4 NUMPY="numpy>=1.15"

  - CONDA_PYTHON_VERION=3.5 NUMPY="numpy==1.13.1"
  - CONDA_PYTHON_VERION=3.5 NUMPY="numpy==1.14.5"
  - CONDA_PYTHON_VERION=3.5 NUMPY="numpy>=1.15"

  - CONDA_PYTHON_VERION=3.6 NUMPY="numpy==1.13.1"
  - CONDA_PYTHON_VERION=3.6 NUMPY="numpy==1.14.5"
  - CONDA_PYTHON_VERION=3.6 NUMPY="numpy>=1.15"

  - CONDA_PYTHON_VERION=3.7 NUMPY="numpy==1.13.1"
  - CONDA_PYTHON_VERION=3.7 NUMPY="numpy==1.14.5"
  - CONDA_PYTHON_VERION=3.7 NUMPY="numpy>=1.15"

  - CONDA_PYTHON_VERION=pypy2.7-5.10.0 NUMPY="numpy>=1.15"

  - CONDA_PYTHON_VERION=pypy3.5 NUMPY="numpy>=1.15"

install:
  - wget -nv http://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - if [ "${CONDA_PYTHON_VERION}" = "2.7" ] || [ "${CONDA_PYTHON_VERION}" = "3.6" ] || [ "${CONDA_PYTHON_VERION}" = "3.7" ]; then
      conda config --add channels conda-forge/label/gcc7;
      conda config --add channels chrisburr;
      conda create -q -n testenv python=${CONDA_PYTHON_VERION} nomkl root pandas;
    elif [[ "${CONDA_PYTHON_VERION}" = pypy* ]]; then
      conda config --add channels conda-forge;
      conda create -q -n testenv ${CONDA_PYTHON_VERION};
    else
      conda config --add channels conda-forge;
      conda create -q -n testenv python=${CONDA_PYTHON_VERION} pandas;
    fi
  - source activate testenv
  - pip install "pytest>=3.9" pytest-runner
  - pip install awkward
  - pip install "uproot-methods>=0.2.0"

addons:
  apt:
    packages:
      - python-setuptools

script:
  python setup.py pytest

notifications:
  slack: scikit-hep:b6cgBXwccPoaCNLn5VKFJFVy

deploy:
  provider: pypi
  user: pivarski
  password:
    secure: "BpSLpIcnkTtey4MILj0hiBPCF2W89iAyPbMs4eGO+KMYrACbuXoSR5Pt+Fm4JZpBF5apQeW2ul3WZLpJYNCnkZ/FnliUJwmfJVzcSJrJBmG0dkYyGtASaxuIR7BK4GWuMC00YVcqUX33mExwodU+P54LzXsFYIM4uVjjZgUWrlMxgZTPrYmfSowQfSAxkSV9TUSPZoh8ofONBUZJrt0dzeO8MnIfbssMnI2VMnWv3FG9H0eWxbzaWLjQBOQmMHRXPqGWBflwJ5uUsdBEFKoDpbj9JhDesiULcxezHHFxnWeXr0z7lR6KGM+R3rSwjCrLrS/0MQnXmW8+00pNVLwxjGOYrbSinnvBdZ+Olwb8PcGnqXVFAf0EdwWsYgrX2055vzJDpH0d82t3CAu2RrvpStq/TuDydCfPHmehIpJwBbicKAOmK+DIcMKs/rqpGnb4TCFav0L+zB+xQBqn5tZhbev6F0fPtyuUbrjCPqpb/HikzaZoSnqKA39FSK3wBDP3K13GkEJZiYlq0lvynQD5Ye/1DB9OKH3Vdzohi0JStopAtEga5YvH/CzpIm3D9gK7ZpIVKLXf79ebxAMeYGBNFxEI9SKLdWgxL0kJoCxyZWxdzusyafxWRLp76xJ5mMMNEb+RgNXThgybVBISWhD+WjhOodUm/43sty5eMM4mKRs="
  distributions: "sdist bdist_wheel --universal"
  on:
    tags: true
    branch: master
    condition: '$TRAVIS_PYTHON_VERSION = "3.6" && $NUMPY = "numpy>=1.15"'

stages:
  - test
  - name: docs
    if: (branch = master) AND (NOT (type IN (pull_request)))

jobs:
  include:
    - stage: docs
      python: '3.6'
      env: NUMPY="numpy>=1.15"
      addons:
        chrome: stable
        apt:
          packages:
            - chromium-chromedriver
      before_install:
        - sudo apt-get update
        - sudo apt-get -qq install pandoc
        - pip install --upgrade pip setuptools wheel
        - pip install selenium
      install:
        - pip install -U -q .
      before_script:
        - ln --symbolic /usr/lib/chromium-browser/chromedriver "${HOME}/bin/chromedriver"
      script:
        # Open Binder example in browser to trigger repo2docker to build image
        - python binder/trigger_binder.py --url https://mybinder.org/v2/gh/scikit-hep/uproot/master
        - python binder/trigger_binder.py --url https://mybinder.org/v2/gh/scikit-hep/uproot/master?filepath=binder%2Ftutorial.ipynb
        - python binder/trigger_binder.py --url https://mybinder.org/v2/gh/scikit-hep/uproot/master?filepath=binder%2Fversion-3-features.ipynb
